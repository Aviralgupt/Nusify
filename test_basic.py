#!/usr/bin/env python3
"""
Basic tests for Nusify project
"""

def test_imports():
    """Test that all required modules can be imported"""
    try:
        import app
        print("‚úÖ Flask app imports successfully")
    except ImportError as e:
        print(f"‚ùå Flask app import failed: {e}")
        return False
    
    try:
        from utils.mood_analyzer import MoodAnalyzer
        print("‚úÖ MoodAnalyzer imports successfully")
    except ImportError as e:
        print(f"‚ùå MoodAnalyzer import failed: {e}")
        return False
    
    try:
        from utils.music_generator import MusicGenerator
        print("‚úÖ MusicGenerator imports successfully")
    except ImportError as e:
        print(f"‚ùå MusicGenerator import failed: {e}")
        return False
    
    try:
        from utils.voice_cloner import VoiceCloner
        print("‚úÖ VoiceCloner imports successfully")
    except ImportError as e:
        print(f"‚ùå VoiceCloner import failed: {e}")
        return False
    
    try:
        from utils.audio_mixer import AudioMixer
        print("‚úÖ AudioMixer imports successfully")
    except ImportError as e:
        print(f"‚ùå AudioMixer import failed: {e}")
        return False
    
    try:
        from utils.lyrics_processor import LyricsProcessor
        print("‚úÖ LyricsProcessor imports successfully")
    except ImportError as e:
        print(f"‚ùå LyricsProcessor import failed: {e}")
        return False
    
    return True

def test_config():
    """Test that configuration files exist"""
    import os
    
    required_files = [
        'requirements.txt',
        'app.py',
        'config/voices.json',
        'frontend/package.json'
    ]
    
    for file_path in required_files:
        if os.path.exists(file_path):
            print(f"‚úÖ {file_path} exists")
        else:
            print(f"‚ùå {file_path} missing")
            return False
    
    return True

def test_flask_app():
    """Test that Flask app can be created"""
    try:
        from app import app
        print("‚úÖ Flask app instance created successfully")
        return True
    except Exception as e:
        print(f"‚ùå Flask app creation failed: {e}")
        return False

if __name__ == "__main__":
    print("üß™ Running basic tests for Nusify...")
    print("=" * 50)
    
    tests = [
        test_imports,
        test_config,
        test_flask_app
    ]
    
    passed = 0
    total = len(tests)
    
    for test in tests:
        if test():
            passed += 1
        print()
    
    print("=" * 50)
    print(f"üìä Test Results: {passed}/{total} tests passed")
    
    if passed == total:
        print("üéâ All tests passed! Project is ready for deployment.")
        exit(0)
    else:
        print("‚ö†Ô∏è  Some tests failed. Please check the issues above.")
        exit(1)
