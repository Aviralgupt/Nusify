import React, { useState } from 'react';
import { motion } from 'framer-motion';

const AudioPlayer = ({ songPath, onDownload }) => {
  const [isPlaying, setIsPlaying] = useState(false);
  const [audio] = useState(new Audio());

  const handlePlayPause = () => {
    if (isPlaying) {
      audio.pause();
      setIsPlaying(false);
    } else {
      audio.src = songPath;
      audio.play();
      setIsPlaying(true);
    }
  };

  const handleDownload = () => {
    if (onDownload) {
      onDownload();
    } else {
      // Fallback download method
      const link = document.createElement('a');
      link.href = songPath;
      link.download = 'nusify-song.wav';
      document.body.appendChild(link);
      link.click();
      document.body.removeChild(link);
    }
  };

  // Listen for audio events
  React.useEffect(() => {
    const handleEnded = () => setIsPlaying(false);
    const handleError = () => setIsPlaying(false);

    audio.addEventListener('ended', handleEnded);
    audio.addEventListener('error', handleError);

    return () => {
      audio.removeEventListener('ended', handleEnded);
      audio.removeEventListener('error', handleError);
    };
  }, [audio]);

  if (!songPath) return null;

  return (
    <motion.div
      initial={{ opacity: 0, y: 20 }}
      animate={{ opacity: 1, y: 0 }}
      className="bg-white rounded-lg shadow-lg p-6 space-y-4"
    >
      <h3 className="text-xl font-bold text-gray-800">Your Generated Song</h3>
      
      <div className="space-y-4">
        {/* Audio Controls */}
        <div className="flex items-center justify-center space-x-4">
          <motion.button
            whileHover={{ scale: 1.05 }}
            whileTap={{ scale: 0.95 }}
            onClick={handlePlayPause}
            className={`w-16 h-16 rounded-full flex items-center justify-center text-white font-bold text-lg ${
              isPlaying ? 'bg-red-500 hover:bg-red-600' : 'bg-green-500 hover:bg-green-600'
            }`}
          >
            {isPlaying ? '‚è∏Ô∏è' : '‚ñ∂Ô∏è'}
          </motion.button>
          
          <div className="text-center">
            <div className="text-sm text-gray-600">
              {isPlaying ? 'Playing...' : 'Ready to play'}
            </div>
            <div className="text-xs text-gray-500">
              Click to {isPlaying ? 'pause' : 'play'}
            </div>
          </div>
        </div>

        {/* Download Button */}
        <div className="text-center">
          <motion.button
            whileHover={{ scale: 1.02 }}
            whileTap={{ scale: 0.98 }}
            onClick={handleDownload}
            className="bg-blue-500 hover:bg-blue-600 text-white px-6 py-3 rounded-lg font-medium transition-colors"
          >
            üì• Download Song
          </motion.button>
          <p className="text-xs text-gray-500 mt-2">
            Save your AI-generated song to your device
          </p>
        </div>

        {/* Song Info */}
        <div className="bg-gray-50 rounded-lg p-4">
          <h4 className="font-medium text-gray-800 mb-2">Song Information</h4>
          <div className="text-sm text-gray-600 space-y-1">
            <div>Format: WAV</div>
            <div>Quality: High Definition</div>
            <div>Generated by: Nusify AI</div>
          </div>
        </div>
      </div>
    </motion.div>
  );
};

export default AudioPlayer;
